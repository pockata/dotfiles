set -gq utf8 on
set -g set-titles on

# Set the default terminal mode to 256color mode
set -g default-terminal "tmux-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -ga terminal-overrides ",*256col*:Tc"
set-window-option -g xterm-keys on

# set scrollback history to 10000
set -g history-limit 10000

# set window and pane index to 1 (0 by default)
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# for vim & tmux-plugins/vim-tmux-focus-events
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Custom bindings
unbind C-b
set -g prefix M-a
bind m-a send-prefix

# reload ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display "Config reloaded"

bind s split-window -vb -l 15 -c "#{pane_current_path}"
bind v split-window -h -l 55 -c "#{pane_current_path}"

# don't rename windows automatically
set-option -g allow-rename on

# Set repeat-time to one second
set-option -g repeat-time 1000

# Makes cycling between windows repeatable
unbind n
bind n next-window
unbind N
bind N previous-window

unbind c
bind c new-window -c '#{pane_current_path}'

# Makes cycling between sessions go the direction you expect
unbind (
bind -r ( switch-client -n
unbind )
bind -r ) switch-client -p

bind -r \' switch-client -l

# reordering windows
# press Ctrl+Shift+Left/Right
bind -r S-Left swap-window -t -1
bind -r S-Right swap-window -t +1

bind -r Left resize-pane -L 5
bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5
bind -r Right resize-pane -R 5

# Remap copy mode keys to be more vi-like
unbind [
# unbind Escape
unbind p
bind p paste-buffer

set-option -ga set-clipboard on

# enter copy mode
bind / copy-mode

# Make vi movements available in copy mode
set-window-option -g mode-keys vi

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
bind-key -T copy-mode-vi j send-keys -X cursor-left
bind-key -T copy-mode-vi k send-keys -X cursor-down
bind-key -T copy-mode-vi l send-keys -X cursor-up
bind-key -T copy-mode-vi \; send-keys -X cursor-right
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X stop-selection
bind-key -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection

bind : command-prompt

# -Z open fullscreen
# -s collapse session tree
bind a choose-tree -Z -s

# https://wiki.archlinux.org/index.php/tmux#Start_a_non-login_shell
setw -g default-command "zsh -i"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#
# Modified to ignore fzf prompts (`fzf` in regex)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(fzf|view|l?n?vim?x?)(diff)?$'"

bind-key -n 'C-j' if-shell "$is_vim" { send-keys C-j } { if-shell -F '#{pane_at_left}'   {} { select-pane -L }}
bind-key -n 'C-k' if-shell "$is_vim" { send-keys C-k } { if-shell -F '#{pane_at_bottom}'   {} { select-pane -D }}
bind-key -n 'C-l' if-shell "$is_vim" { send-keys C-l } { if-shell -F '#{pane_at_top}'   {} { select-pane -U }}
# Alacritty is configured to pass Ctrl + F12 when I hit Ctrl + ; because some
# programs have a hard time dealing with Ctrl + ;
bind-key -n 'C-F12' if-shell "$is_vim" { send-keys <C-Semicolon> } { if-shell -F '#{pane_at_right}'   {} { select-pane -R }}

# explicitly enable mouse control
set -g mouse on

# Display alert messages for 0.6 seconds
set-option -g display-time 600

# Colors
set -g status-style "bg=default,fg=default"

# set-window-option -g window-status-current-fg colour2
# set-option -gw window-status-activity-attr none
# set-option -gw window-status-activity-bg default
# set-option -gw window-status-activity-fg black

# # Do not color split separators
# set -g pane-border-style fg=default
# set -g pane-active-border-style fg=default
# set -g pane-active-border-style bg=default

# Faster Command Sequences
# http://mutelight.org/practical-tmux
set -s escape-time 0

# Status bar
set -g status-left "#[bg=magenta] #S #[bg=default] #{prefix_highlight}"
set -g status-left-length 100
# set -g status-right ""
set -g status-justify right
set-option -g status-interval 1

# # Split
# set-option -g pane-active-border-fg colour234
# set-option -g pane-active-border-bg default
# set-option -g pane-border-fg colour234
# set-option -g pane-border-bg default

# set -g status-left ''
set -g status-right ' #[fg=white,bg=magenta] party hard '

setw -g window-status-format '#[fg=white,bg=black,nodim] #I #[fg=white,bg=black,nodim] #W #{?window_zoomed_flag,★ ,}'
setw -g window-status-current-format '#[fg=white,bg=blue,nodim] #I #[fg=white,bg=magenta,nodim] #W #{?window_zoomed_flag,★ ,}'

set -g status-position top

# set -g status-bg default
# setw -g window-status-format '#[fg=cyan,bg=black] #I #[fg=cyan,bg=black] #W '
# setw -g window-status-current-format '#[fg=white,bg=blue] #I #[fg=white,bg=magenta] #W '

set -g @prefix_highlight_fg 'colour8'
set -g @prefix_highlight_bg 'colour226'

# set-window-option -g window-status-format '#[bg=default]#[fg=colour8]  #W'
# set-window-option -g window-status-current-format '#[bg=default]#[fg=colour11]  #W'

set -g visual-activity on
set-window-option -g monitor-activity off

# set -g pane-border-fg colour8
# set -g pane-active-border-fg green
# set -g pane-active-border-bg default

# # sane scrolling
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# set up aliases for temporarily maximizing panes
bind t break-pane
bind-key -r T run-shell -b "~/bin/explode-tmux-window.sh"

bind-key -r f run-shell "tmux neww ~/bin/tmux-sessionizer"

# install tpm if not already installed
if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone --depth 1 https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'Morantron/tmux-fingers'
# set -g @fingers-copy-command 'xclip -selection clipboard'

set -g @plugin 'fcsonline/tmux-thumbs'
set -g @thumbs-command 'echo -n {} | xclip -selection clipboard'
set -g @thumbs-key F

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-resurrect'

#Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

